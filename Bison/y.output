Terminals unused in grammar

   CONST_CHAR
   STRING
   DO
   BREAK
   CONTINUE
   CHAR
   DOUBLE
   SWITCH
   CASE
   DEFAULT
   BITOP


Grammar

    0 $accept: start $end

    1 start: program

    2 program: program unit
    3        | unit

    4 unit: var_declaration
    5     | func_declaration
    6     | func_definition

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN RPAREN SEMICOLON

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN RPAREN compound_statement

   11 parameter_list: parameter_list COMMA type_specifier ID
   12               | parameter_list COMMA type_specifier
   13               | type_specifier ID
   14               | type_specifier

   15 $@1: %empty

   16 compound_statement: LCURL $@1 statements RCURL
   17                   | LCURL RCURL

   18 var_declaration: type_specifier declaration_list SEMICOLON

   19 type_specifier: INT
   20               | FLOAT
   21               | VOID

   22 declaration_list: declaration_list COMMA ID
   23                 | declaration_list COMMA ID LTHIRD CONST_INT RTHIRD
   24                 | ID
   25                 | ID LTHIRD CONST_INT RTHIRD

   26 statements: statement
   27           | statements statement

   28 statement: var_declaration
   29          | expression_statement
   30          | compound_statement
   31          | FOR LPAREN expression_statement expression_statement expression RPAREN statement
   32          | IF LPAREN expression RPAREN statement
   33          | IF LPAREN expression RPAREN statement ELSE statement
   34          | WHILE LPAREN expression RPAREN statement
   35          | PRINTLN LPAREN ID RPAREN SEMICOLON
   36          | RETURN expression SEMICOLON

   37 expression_statement: SEMICOLON
   38                     | expression SEMICOLON

   39 variable: ID
   40         | ID LTHIRD expression RTHIRD

   41 expression: logic_expression
   42           | variable ASSIGNOP logic_expression

   43 logic_expression: rel_expression
   44                 | rel_expression LOGICOP rel_expression

   45 rel_expression: simple_expression
   46               | simple_expression RELOP simple_expression

   47 simple_expression: term
   48                  | simple_expression ADDOP term

   49 term: unary_expression
   50     | term MULOP unary_expression

   51 unary_expression: ADDOP unary_expression
   52                 | NOT unary_expression
   53                 | factor

   54 factor: variable
   55       | ID LPAREN argument_list RPAREN
   56       | LPAREN expression RPAREN
   57       | CONST_INT
   58       | CONST_FLOAT
   59       | variable INCOP
   60       | variable DECOP

   61 argument_list: arguments
   62              | %empty

   63 arguments: arguments COMMA logic_expression
   64          | logic_expression


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 11 13 22 23 24 25 35 39 40 55
CONST_INT (259) 23 25 57
CONST_FLOAT (260) 58
CONST_CHAR (261)
ADDOP (262) 48 51
MULOP (263) 50
LOGICOP (264) 44
RELOP (265) 46
STRING (266)
IF (267) 32 33
ELSE (268) 33
FOR (269) 31
WHILE (270) 34
DO (271)
BREAK (272)
CONTINUE (273)
INT (274) 19
FLOAT (275) 20
CHAR (276)
DOUBLE (277)
VOID (278) 21
RETURN (279) 36
SWITCH (280)
CASE (281)
DEFAULT (282)
INCOP (283) 59
DECOP (284) 60
ASSIGNOP (285) 42
LPAREN (286) 7 8 9 10 31 32 33 34 35 55 56
RPAREN (287) 7 8 9 10 31 32 33 34 35 55 56
LCURL (288) 16 17
RCURL (289) 16 17
LTHIRD (290) 23 25 40
RTHIRD (291) 23 25 40
SEMICOLON (292) 7 8 18 35 36 37 38
COMMA (293) 11 12 22 23 63
NOT (294) 52
PRINTLN (295) 35
BITOP (296)
ELSE_LOWER (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1, on right: 0
program (45)
    on left: 2 3, on right: 1 2
unit (46)
    on left: 4 5 6, on right: 2 3
func_declaration (47)
    on left: 7 8, on right: 5
func_definition (48)
    on left: 9 10, on right: 6
parameter_list (49)
    on left: 11 12 13 14, on right: 7 9 11 12
compound_statement (50)
    on left: 16 17, on right: 9 10 30
$@1 (51)
    on left: 15, on right: 16
var_declaration (52)
    on left: 18, on right: 4 28
type_specifier (53)
    on left: 19 20 21, on right: 7 8 9 10 11 12 13 14 18
declaration_list (54)
    on left: 22 23 24 25, on right: 18 22 23
statements (55)
    on left: 26 27, on right: 16 27
statement (56)
    on left: 28 29 30 31 32 33 34 35 36, on right: 26 27 31 32 33 34
expression_statement (57)
    on left: 37 38, on right: 29 31
variable (58)
    on left: 39 40, on right: 42 54 59 60
expression (59)
    on left: 41 42, on right: 31 32 33 34 36 38 40 56
logic_expression (60)
    on left: 43 44, on right: 41 42 63 64
rel_expression (61)
    on left: 45 46, on right: 43 44
simple_expression (62)
    on left: 47 48, on right: 45 46 48
term (63)
    on left: 49 50, on right: 47 48 50
unary_expression (64)
    on left: 51 52 53, on right: 49 50 51 52
factor (65)
    on left: 54 55 56 57 58 59 60, on right: 53
argument_list (66)
    on left: 61 62, on right: 55
arguments (67)
    on left: 63 64, on right: 61 63


State 0

    0 $accept: . start $end

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    start             go to state 4
    program           go to state 5
    unit              go to state 6
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 1

   19 type_specifier: INT .

    $default  reduce using rule 19 (type_specifier)


State 2

   20 type_specifier: FLOAT .

    $default  reduce using rule 20 (type_specifier)


State 3

   21 type_specifier: VOID .

    $default  reduce using rule 21 (type_specifier)


State 4

    0 $accept: start . $end

    $end  shift, and go to state 11


State 5

    1 start: program .
    2 program: program . unit

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    $default  reduce using rule 1 (start)

    unit              go to state 12
    func_declaration  go to state 7
    func_definition   go to state 8
    var_declaration   go to state 9
    type_specifier    go to state 10


State 6

    3 program: unit .

    $default  reduce using rule 3 (program)


State 7

    5 unit: func_declaration .

    $default  reduce using rule 5 (unit)


State 8

    6 unit: func_definition .

    $default  reduce using rule 6 (unit)


State 9

    4 unit: var_declaration .

    $default  reduce using rule 4 (unit)


State 10

    7 func_declaration: type_specifier . ID LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier . ID LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier . ID LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier . ID LPAREN RPAREN compound_statement
   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 13

    declaration_list  go to state 14


State 11

    0 $accept: start $end .

    $default  accept


State 12

    2 program: program unit .

    $default  reduce using rule 2 (program)


State 13

    7 func_declaration: type_specifier ID . LPAREN parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID . LPAREN RPAREN SEMICOLON
    9 func_definition: type_specifier ID . LPAREN parameter_list RPAREN compound_statement
   10                | type_specifier ID . LPAREN RPAREN compound_statement
   24 declaration_list: ID .
   25                 | ID . LTHIRD CONST_INT RTHIRD

    LPAREN  shift, and go to state 15
    LTHIRD  shift, and go to state 16

    $default  reduce using rule 24 (declaration_list)


State 14

   18 var_declaration: type_specifier declaration_list . SEMICOLON
   22 declaration_list: declaration_list . COMMA ID
   23                 | declaration_list . COMMA ID LTHIRD CONST_INT RTHIRD

    SEMICOLON  shift, and go to state 17
    COMMA      shift, and go to state 18


State 15

    7 func_declaration: type_specifier ID LPAREN . parameter_list RPAREN SEMICOLON
    8                 | type_specifier ID LPAREN . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN . parameter_list RPAREN compound_statement
   10                | type_specifier ID LPAREN . RPAREN compound_statement

    INT     shift, and go to state 1
    FLOAT   shift, and go to state 2
    VOID    shift, and go to state 3
    RPAREN  shift, and go to state 19

    parameter_list  go to state 20
    type_specifier  go to state 21


State 16

   25 declaration_list: ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 22


State 17

   18 var_declaration: type_specifier declaration_list SEMICOLON .

    $default  reduce using rule 18 (var_declaration)


State 18

   22 declaration_list: declaration_list COMMA . ID
   23                 | declaration_list COMMA . ID LTHIRD CONST_INT RTHIRD

    ID  shift, and go to state 23


State 19

    8 func_declaration: type_specifier ID LPAREN RPAREN . SEMICOLON
   10 func_definition: type_specifier ID LPAREN RPAREN . compound_statement

    LCURL      shift, and go to state 24
    SEMICOLON  shift, and go to state 25

    compound_statement  go to state 26


State 20

    7 func_declaration: type_specifier ID LPAREN parameter_list . RPAREN SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list . RPAREN compound_statement
   11 parameter_list: parameter_list . COMMA type_specifier ID
   12               | parameter_list . COMMA type_specifier

    RPAREN  shift, and go to state 27
    COMMA   shift, and go to state 28


State 21

   13 parameter_list: type_specifier . ID
   14               | type_specifier .

    ID  shift, and go to state 29

    $default  reduce using rule 14 (parameter_list)


State 22

   25 declaration_list: ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 30


State 23

   22 declaration_list: declaration_list COMMA ID .
   23                 | declaration_list COMMA ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 31

    $default  reduce using rule 22 (declaration_list)


State 24

   16 compound_statement: LCURL . $@1 statements RCURL
   17                   | LCURL . RCURL

    RCURL  shift, and go to state 32

    $default  reduce using rule 15 ($@1)

    $@1  go to state 33


State 25

    8 func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON .

    $default  reduce using rule 8 (func_declaration)


State 26

   10 func_definition: type_specifier ID LPAREN RPAREN compound_statement .

    $default  reduce using rule 10 (func_definition)


State 27

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN . SEMICOLON
    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN . compound_statement

    LCURL      shift, and go to state 24
    SEMICOLON  shift, and go to state 34

    compound_statement  go to state 35


State 28

   11 parameter_list: parameter_list COMMA . type_specifier ID
   12               | parameter_list COMMA . type_specifier

    INT    shift, and go to state 1
    FLOAT  shift, and go to state 2
    VOID   shift, and go to state 3

    type_specifier  go to state 36


State 29

   13 parameter_list: type_specifier ID .

    $default  reduce using rule 13 (parameter_list)


State 30

   25 declaration_list: ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 25 (declaration_list)


State 31

   23 declaration_list: declaration_list COMMA ID LTHIRD . CONST_INT RTHIRD

    CONST_INT  shift, and go to state 37


State 32

   17 compound_statement: LCURL RCURL .

    $default  reduce using rule 17 (compound_statement)


State 33

   16 compound_statement: LCURL $@1 . statements RCURL

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statements            go to state 53
    statement             go to state 54
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 34

    7 func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON .

    $default  reduce using rule 7 (func_declaration)


State 35

    9 func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement .

    $default  reduce using rule 9 (func_definition)


State 36

   11 parameter_list: parameter_list COMMA type_specifier . ID
   12               | parameter_list COMMA type_specifier .

    ID  shift, and go to state 64

    $default  reduce using rule 12 (parameter_list)


State 37

   23 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT . RTHIRD

    RTHIRD  shift, and go to state 65


State 38

   39 variable: ID .
   40         | ID . LTHIRD expression RTHIRD
   55 factor: ID . LPAREN argument_list RPAREN

    LPAREN  shift, and go to state 66
    LTHIRD  shift, and go to state 67

    $default  reduce using rule 39 (variable)


State 39

   57 factor: CONST_INT .

    $default  reduce using rule 57 (factor)


State 40

   58 factor: CONST_FLOAT .

    $default  reduce using rule 58 (factor)


State 41

   51 unary_expression: ADDOP . unary_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 69
    factor            go to state 63


State 42

   32 statement: IF . LPAREN expression RPAREN statement
   33          | IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN  shift, and go to state 70


State 43

   31 statement: FOR . LPAREN expression_statement expression_statement expression RPAREN statement

    LPAREN  shift, and go to state 71


State 44

   34 statement: WHILE . LPAREN expression RPAREN statement

    LPAREN  shift, and go to state 72


State 45

   36 statement: RETURN . expression SEMICOLON

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 73
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 46

   56 factor: LPAREN . expression RPAREN

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 74
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 47

   37 expression_statement: SEMICOLON .

    $default  reduce using rule 37 (expression_statement)


State 48

   52 unary_expression: NOT . unary_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 75
    factor            go to state 63


State 49

   35 statement: PRINTLN . LPAREN ID RPAREN SEMICOLON

    LPAREN  shift, and go to state 76


State 50

   30 statement: compound_statement .

    $default  reduce using rule 30 (statement)


State 51

   28 statement: var_declaration .

    $default  reduce using rule 28 (statement)


State 52

   18 var_declaration: type_specifier . declaration_list SEMICOLON

    ID  shift, and go to state 77

    declaration_list  go to state 14


State 53

   16 compound_statement: LCURL $@1 statements . RCURL
   27 statements: statements . statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    RCURL        shift, and go to state 78
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 79
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 54

   26 statements: statement .

    $default  reduce using rule 26 (statements)


State 55

   29 statement: expression_statement .

    $default  reduce using rule 29 (statement)


State 56

   42 expression: variable . ASSIGNOP logic_expression
   54 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    INCOP     shift, and go to state 80
    DECOP     shift, and go to state 81
    ASSIGNOP  shift, and go to state 82

    $default  reduce using rule 54 (factor)


State 57

   38 expression_statement: expression . SEMICOLON

    SEMICOLON  shift, and go to state 83


State 58

   41 expression: logic_expression .

    $default  reduce using rule 41 (expression)


State 59

   43 logic_expression: rel_expression .
   44                 | rel_expression . LOGICOP rel_expression

    LOGICOP  shift, and go to state 84

    $default  reduce using rule 43 (logic_expression)


State 60

   45 rel_expression: simple_expression .
   46               | simple_expression . RELOP simple_expression
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 85
    RELOP  shift, and go to state 86

    $default  reduce using rule 45 (rel_expression)


State 61

   47 simple_expression: term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 87

    $default  reduce using rule 47 (simple_expression)


State 62

   49 term: unary_expression .

    $default  reduce using rule 49 (term)


State 63

   53 unary_expression: factor .

    $default  reduce using rule 53 (unary_expression)


State 64

   11 parameter_list: parameter_list COMMA type_specifier ID .

    $default  reduce using rule 11 (parameter_list)


State 65

   23 declaration_list: declaration_list COMMA ID LTHIRD CONST_INT RTHIRD .

    $default  reduce using rule 23 (declaration_list)


State 66

   55 factor: ID LPAREN . argument_list RPAREN

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    $default  reduce using rule 62 (argument_list)

    variable           go to state 68
    logic_expression   go to state 88
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63
    argument_list      go to state 89
    arguments          go to state 90


State 67

   40 variable: ID LTHIRD . expression RTHIRD

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 91
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 68

   54 factor: variable .
   59       | variable . INCOP
   60       | variable . DECOP

    INCOP  shift, and go to state 80
    DECOP  shift, and go to state 81

    $default  reduce using rule 54 (factor)


State 69

   51 unary_expression: ADDOP unary_expression .

    $default  reduce using rule 51 (unary_expression)


State 70

   32 statement: IF LPAREN . expression RPAREN statement
   33          | IF LPAREN . expression RPAREN statement ELSE statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 92
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 71

   31 statement: FOR LPAREN . expression_statement expression_statement expression RPAREN statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48

    expression_statement  go to state 93
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 72

   34 statement: WHILE LPAREN . expression RPAREN statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 94
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 73

   36 statement: RETURN expression . SEMICOLON

    SEMICOLON  shift, and go to state 95


State 74

   56 factor: LPAREN expression . RPAREN

    RPAREN  shift, and go to state 96


State 75

   52 unary_expression: NOT unary_expression .

    $default  reduce using rule 52 (unary_expression)


State 76

   35 statement: PRINTLN LPAREN . ID RPAREN SEMICOLON

    ID  shift, and go to state 97


State 77

   24 declaration_list: ID .
   25                 | ID . LTHIRD CONST_INT RTHIRD

    LTHIRD  shift, and go to state 16

    $default  reduce using rule 24 (declaration_list)


State 78

   16 compound_statement: LCURL $@1 statements RCURL .

    $default  reduce using rule 16 (compound_statement)


State 79

   27 statements: statements statement .

    $default  reduce using rule 27 (statements)


State 80

   59 factor: variable INCOP .

    $default  reduce using rule 59 (factor)


State 81

   60 factor: variable DECOP .

    $default  reduce using rule 60 (factor)


State 82

   42 expression: variable ASSIGNOP . logic_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 68
    logic_expression   go to state 98
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 83

   38 expression_statement: expression SEMICOLON .

    $default  reduce using rule 38 (expression_statement)


State 84

   44 logic_expression: rel_expression LOGICOP . rel_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 68
    rel_expression     go to state 99
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 85

   48 simple_expression: simple_expression ADDOP . term

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable          go to state 68
    term              go to state 100
    unary_expression  go to state 62
    factor            go to state 63


State 86

   46 rel_expression: simple_expression RELOP . simple_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 68
    simple_expression  go to state 101
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 87

   50 term: term MULOP . unary_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable          go to state 68
    unary_expression  go to state 102
    factor            go to state 63


State 88

   64 arguments: logic_expression .

    $default  reduce using rule 64 (arguments)


State 89

   55 factor: ID LPAREN argument_list . RPAREN

    RPAREN  shift, and go to state 103


State 90

   61 argument_list: arguments .
   63 arguments: arguments . COMMA logic_expression

    COMMA  shift, and go to state 104

    $default  reduce using rule 61 (argument_list)


State 91

   40 variable: ID LTHIRD expression . RTHIRD

    RTHIRD  shift, and go to state 105


State 92

   32 statement: IF LPAREN expression . RPAREN statement
   33          | IF LPAREN expression . RPAREN statement ELSE statement

    RPAREN  shift, and go to state 106


State 93

   31 statement: FOR LPAREN expression_statement . expression_statement expression RPAREN statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48

    expression_statement  go to state 107
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 94

   34 statement: WHILE LPAREN expression . RPAREN statement

    RPAREN  shift, and go to state 108


State 95

   36 statement: RETURN expression SEMICOLON .

    $default  reduce using rule 36 (statement)


State 96

   56 factor: LPAREN expression RPAREN .

    $default  reduce using rule 56 (factor)


State 97

   35 statement: PRINTLN LPAREN ID . RPAREN SEMICOLON

    RPAREN  shift, and go to state 109


State 98

   42 expression: variable ASSIGNOP logic_expression .

    $default  reduce using rule 42 (expression)


State 99

   44 logic_expression: rel_expression LOGICOP rel_expression .

    $default  reduce using rule 44 (logic_expression)


State 100

   48 simple_expression: simple_expression ADDOP term .
   50 term: term . MULOP unary_expression

    MULOP  shift, and go to state 87

    $default  reduce using rule 48 (simple_expression)


State 101

   46 rel_expression: simple_expression RELOP simple_expression .
   48 simple_expression: simple_expression . ADDOP term

    ADDOP  shift, and go to state 85

    $default  reduce using rule 46 (rel_expression)


State 102

   50 term: term MULOP unary_expression .

    $default  reduce using rule 50 (term)


State 103

   55 factor: ID LPAREN argument_list RPAREN .

    $default  reduce using rule 55 (factor)


State 104

   63 arguments: arguments COMMA . logic_expression

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 68
    logic_expression   go to state 110
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 105

   40 variable: ID LTHIRD expression RTHIRD .

    $default  reduce using rule 40 (variable)


State 106

   32 statement: IF LPAREN expression RPAREN . statement
   33          | IF LPAREN expression RPAREN . statement ELSE statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 111
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 107

   31 statement: FOR LPAREN expression_statement expression_statement . expression RPAREN statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    LPAREN       shift, and go to state 46
    NOT          shift, and go to state 48

    variable           go to state 56
    expression         go to state 112
    logic_expression   go to state 58
    rel_expression     go to state 59
    simple_expression  go to state 60
    term               go to state 61
    unary_expression   go to state 62
    factor             go to state 63


State 108

   34 statement: WHILE LPAREN expression RPAREN . statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 113
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 109

   35 statement: PRINTLN LPAREN ID RPAREN . SEMICOLON

    SEMICOLON  shift, and go to state 114


State 110

   63 arguments: arguments COMMA logic_expression .

    $default  reduce using rule 63 (arguments)


State 111

   32 statement: IF LPAREN expression RPAREN statement .
   33          | IF LPAREN expression RPAREN statement . ELSE statement

    ELSE  shift, and go to state 115

    $default  reduce using rule 32 (statement)


State 112

   31 statement: FOR LPAREN expression_statement expression_statement expression . RPAREN statement

    RPAREN  shift, and go to state 116


State 113

   34 statement: WHILE LPAREN expression RPAREN statement .

    $default  reduce using rule 34 (statement)


State 114

   35 statement: PRINTLN LPAREN ID RPAREN SEMICOLON .

    $default  reduce using rule 35 (statement)


State 115

   33 statement: IF LPAREN expression RPAREN statement ELSE . statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 117
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 116

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN . statement

    ID           shift, and go to state 38
    CONST_INT    shift, and go to state 39
    CONST_FLOAT  shift, and go to state 40
    ADDOP        shift, and go to state 41
    IF           shift, and go to state 42
    FOR          shift, and go to state 43
    WHILE        shift, and go to state 44
    INT          shift, and go to state 1
    FLOAT        shift, and go to state 2
    VOID         shift, and go to state 3
    RETURN       shift, and go to state 45
    LPAREN       shift, and go to state 46
    LCURL        shift, and go to state 24
    SEMICOLON    shift, and go to state 47
    NOT          shift, and go to state 48
    PRINTLN      shift, and go to state 49

    compound_statement    go to state 50
    var_declaration       go to state 51
    type_specifier        go to state 52
    statement             go to state 118
    expression_statement  go to state 55
    variable              go to state 56
    expression            go to state 57
    logic_expression      go to state 58
    rel_expression        go to state 59
    simple_expression     go to state 60
    term                  go to state 61
    unary_expression      go to state 62
    factor                go to state 63


State 117

   33 statement: IF LPAREN expression RPAREN statement ELSE statement .

    $default  reduce using rule 33 (statement)


State 118

   31 statement: FOR LPAREN expression_statement expression_statement expression RPAREN statement .

    $default  reduce using rule 31 (statement)
